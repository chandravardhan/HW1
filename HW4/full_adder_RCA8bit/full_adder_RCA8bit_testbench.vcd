$date
	Tue Sep 28 00:18:23 2021
$end
$version
	Icarus Verilog
$end
$timescale
	1ps
$end
$scope module full_adder_RCA8bit_testbench $end
$var wire 8 ! s [7:0] $end
$var wire 1 " cout $end
$var reg 8 # a [7:0] $end
$var reg 8 $ b [7:0] $end
$var reg 1 % cin $end
$scope module dut1 $end
$var wire 8 & a [7:0] $end
$var wire 8 ' b [7:0] $end
$var wire 1 % cin $end
$var wire 8 ( s [7:0] $end
$var wire 1 " cout $end
$var wire 1 ) c7 $end
$var wire 1 * c6 $end
$var wire 1 + c5 $end
$var wire 1 , c4 $end
$var wire 1 - c3 $end
$var wire 1 . c2 $end
$var wire 1 / c1 $end
$scope module fa0 $end
$var wire 1 0 a $end
$var wire 1 1 b $end
$var wire 1 2 c1 $end
$var wire 1 3 c2 $end
$var wire 1 % cin $end
$var wire 1 / cout $end
$var wire 1 4 s $end
$var wire 1 5 s1 $end
$upscope $end
$scope module fa1 $end
$var wire 1 6 a $end
$var wire 1 7 b $end
$var wire 1 8 c1 $end
$var wire 1 9 c2 $end
$var wire 1 / cin $end
$var wire 1 . cout $end
$var wire 1 : s $end
$var wire 1 ; s1 $end
$upscope $end
$scope module fa2 $end
$var wire 1 < a $end
$var wire 1 = b $end
$var wire 1 > c1 $end
$var wire 1 ? c2 $end
$var wire 1 . cin $end
$var wire 1 - cout $end
$var wire 1 @ s $end
$var wire 1 A s1 $end
$upscope $end
$scope module fa3 $end
$var wire 1 B a $end
$var wire 1 C b $end
$var wire 1 D c1 $end
$var wire 1 E c2 $end
$var wire 1 - cin $end
$var wire 1 , cout $end
$var wire 1 F s $end
$var wire 1 G s1 $end
$upscope $end
$scope module fa4 $end
$var wire 1 H a $end
$var wire 1 I b $end
$var wire 1 J c1 $end
$var wire 1 K c2 $end
$var wire 1 , cin $end
$var wire 1 + cout $end
$var wire 1 L s $end
$var wire 1 M s1 $end
$upscope $end
$scope module fa5 $end
$var wire 1 N a $end
$var wire 1 O b $end
$var wire 1 P c1 $end
$var wire 1 Q c2 $end
$var wire 1 + cin $end
$var wire 1 * cout $end
$var wire 1 R s $end
$var wire 1 S s1 $end
$upscope $end
$scope module fa6 $end
$var wire 1 T a $end
$var wire 1 U b $end
$var wire 1 V c1 $end
$var wire 1 W c2 $end
$var wire 1 * cin $end
$var wire 1 ) cout $end
$var wire 1 X s $end
$var wire 1 Y s1 $end
$upscope $end
$scope module fa7 $end
$var wire 1 Z a $end
$var wire 1 [ b $end
$var wire 1 \ c1 $end
$var wire 1 ] c2 $end
$var wire 1 ) cin $end
$var wire 1 " cout $end
$var wire 1 ^ s $end
$var wire 1 _ s1 $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
0_
0^
0]
0\
0[
0Z
0Y
0X
0W
0V
0U
0T
0S
0R
0Q
0P
0O
0N
0M
0L
0K
0J
0I
0H
0G
0F
0E
0D
0C
0B
0A
1@
0?
0>
0=
0<
0;
0:
09
18
17
16
15
14
03
02
11
00
0/
1.
0-
0,
0+
0*
0)
b101 (
b11 '
b10 &
0%
b11 $
b10 #
0"
b101 !
$end
#10000
0@
1F
1:
0.
1-
1/
08
1>
b1010 !
b1010 (
04
13
01
07
1=
10
06
1<
1%
b100 $
b100 '
b101 #
b101 &
#25000
1@
1.
0:
19
05
12
1;
b1100 !
b1100 (
04
03
11
16
0%
b101 $
b101 '
b111 #
b111 &
#75000
